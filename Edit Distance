Given two words word1 and word2, find the minimum number of steps required to convert word1 to word2. (each operation is counted as 1 step.)

You have the following 3 operations permitted on a word:

a) Insert a character
b) Delete a character
c) Replace a character



public class Solution {
    public int minDistance(String word1, String word2) {
        int n=word1.length();
        int m=word2.length();
        int[][] step = new int[n+1][m+1];
        
        for(int i=0; i<=n; i++)
           for(int j=0; j<=m; j++){
               if(i==0){
                   step[i][j]=j;
               }else if(j==0){
                   step[i][j]=i;
               }else{
                   if(word1.charAt(i-1)==word2.charAt(j-1)){
                       step[i][j]=step[i-1][j-1];
                   }else{
                       step[i][j]= Math.min(step[i-1][j], Math.min(step[i-1][j-1],step[i][j-1]))+1;
                       
                   }
                   
               }
               
               
           }
        
        return step[n][m];
        
        
    }
}
