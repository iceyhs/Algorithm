
Trapping Rain Water
Total Accepted: 24802 Total Submissions: 84054

Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.

For example,
Given [0,1,0,2,1,0,1,3,2,1,2,1], return 6. 




public class Solution {
    public int trap(int[] A) {
        if(A.length<=1) return 0;
        int[] maxLeft = new int[A.length];
        int[] maxRight= new int[A.length];
        int preMax=0;
        int result=0;
        
        for(int i=0; i<A.length; i++){
            if(A[i]>preMax){
                maxLeft[i]=A[i];
                preMax=A[i];
            }else{
                maxLeft[i]=preMax;
            }
        }
        
       preMax=0;
       
       for(int i=A.length-1; i>=0; i--){
           if(A[i]>preMax){
              maxRight[i]=A[i]; 
               preMax=A[i];
               
           }else{
               maxRight[i]=preMax;
               
           }
       }
        
        for(int i=0; i<A.length; i++){
           result= result+(Math.min(maxLeft[i],maxRight[i])-A[i]);
        }
        
        
    return result;    
        
    }
}

