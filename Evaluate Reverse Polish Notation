Evaluate the value of an arithmetic expression in Reverse Polish Notation.

Valid operators are +, -, *, /. Each operand may be an integer or another expression.

Some examples:
  ["2", "1", "+", "3", "*"] -> ((2 + 1) * 3) -> 9
  ["4", "13", "5", "/", "+"] -> (4 + (13 / 5)) -> 6
  
  
  
  public class Solution {
    public int evalRPN(String[] tokens) {
      Stack<Integer> st= new Stack<Integer>();
      
      for(String token:tokens){
          
      
      try{
          st.push(Integer.parseInt(token));
      }catch(Exception e){
        int number2=st.pop();  
        int number1=st.pop();
        if(token.equals("+")){
            st.push(number1+number2);
        }else if(token.equals("-")){
            st.push(number1-number2);
        }else if(token.equals("*")){
            st.push(number1*number2);
        }else if(token.equals("/")){
            st.push(number1/number2);
        }else{
            throw new IllegalArgumentException("Incorrect token '"+ token+"'");
        }
          
      }
      } 
        
      return st.pop();  
    }
}
