You are given two linked lists representing two non-negative numbers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.

Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
Output: 7 -> 0 -> 8

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    # @return a ListNode
    def addTwoNumbers(self, l1, l2):
        head=ListNode(0)
        carry=0
        p1=l1
        p2=l2
        p3=head
        
       
        
        while p1 and p2:
            sum=p1.val+p2.val+carry
            carry=sum/10
            p3.next=ListNode(sum%10)
            p1=p1.next
            p2=p2.next
            p3=p3.next
        
        while p2:
            sum=p2.val+carry
            carry=sum/10
            p3.next=ListNode(sum%10)
            p2=p2.next
            p3=p3.next
            
        while p1:
            sum=p1.val+carry
            carry=sum/10
            p3.next=ListNode(sum%10)
            p1=p1.next
            p3=p3.next
       
        if carry>0:
            p3.next=ListNode(carry)
           
        return head.next
            
            
        
        

