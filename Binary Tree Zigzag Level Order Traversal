Binary Tree Zigzag Level Order Traversal Total Accepted: 24199 Total Submissions: 91296 My Submissions Question Solution 
Given a binary tree, return the zigzag level order traversal of its nodes' values. (ie, from left to right, then right to left for the next level and alternate between).

For example:
Given binary tree {3,9,20,#,#,15,7},
    3
   / \
  9  20
    /  \
   15   7
return its zigzag level order traversal as:
[
  [3],
  [20,9],
  [15,7]
]


/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
      List<List<Integer>> result = new ArrayList<List<Integer>>();
      List<TreeNode> level = new ArrayList<TreeNode>();
      if(root==null) return result;
      level.add(root);
      int count=1;
      
      while(!level.isEmpty()){
          List<Integer> temp = new ArrayList<Integer>();
          List<TreeNode> current = new ArrayList<TreeNode>();
           for(int i=0; i<level.size(); i++){
              if(level.get(i).left!=null)  current.add(level.get(i).left);
               if(level.get(i).right!=null) current.add(level.get(i).right);
               temp.add(level.get(i).val);
               
           }
           
           if(count%2==0) Collections.reverse(temp);
           result.add(temp);
           level=current;
           count++;
      }
      
      
      return result;
      
        
        
    }
}
