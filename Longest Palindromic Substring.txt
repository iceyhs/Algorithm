Given a string S, find the longest palindromic substring in S. You may assume that the maximum length of S is 1000, and there exists one unique longest palindromic substring.



//cabbagf
// center: 2*s.length()-1

public class Solution {
    public String longestPalindrome(String s) {
       if(s.length()==0) return "";
       int MaxLen=0;
       String result="";
       for(int i=0; i<2*s.length()-1; i++){
         int left=i/2;
         int right=i/2;
          if(i%2==1) right++;
          String temp=getsubstring(s,left,right);
          
          if(MaxLen<temp.length()){
             MaxLen=temp.length();  
              result=temp;
          }
       }
       return result;
       }
    
    public String getsubstring(String s,int left,int right){
       
       while(left>=0 && right<s.length() && s.charAt(left)==s.charAt(right)){
           left--;
           right++;
       }
       
       return s.substring(left+1,right);

    }
}
